events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Manejo de Upgrade/Connection para WebSockets (usado por n8n)
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    proxy_set_header Host $http_host;

    # Configuración de compresión
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Tamaño máximo de carga
    client_max_body_size 100M;

    # Upstream para servicios
    upstream backend {
        server backend:8090;
    }

    upstream frontend {
        server frontend:8081;
    }

    upstream n8n_service {
        server n8n:5678;
    }

    upstream minio_service {
        server minio:9000;
    }

    # Servidor HTTP (puerto 80)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;  # acepta cualquier host para este puerto

        # Redirigir / a /inicio  (usar $http_host para mantener puerto)
        location = / {
            return 301 $scheme://$http_host/inicio;
        }

        # URLs limpias para páginas HTML - proxy al frontend
        location = /inicio {
            proxy_pass http://frontend/iniciar2-0.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /usuarios {
            proxy_pass http://frontend/usuarios.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /publicaciones {
            proxy_pass http://frontend/publicaciones.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /chatbot {
            proxy_pass http://frontend/chatbot.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /login {
            proxy_pass http://frontend/login.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Archivos estáticos (CSS, JS) - proxy al frontend
        # location /css/ {
        #     proxy_pass http://frontend/css/;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header X-Real-IP $remote_addr;
        # }

        # location /js/ {
        #     proxy_pass http://frontend/js/;
        #     proxy_set_header Host $http_host;
        #     proxy_set_header X-Real-IP $remote_addr;
        # }

        # API Backend
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # n8n Webhooks y UI
        location /n8n/ {
            # enviar al upstream sin usar variables en proxy_pass
            proxy_pass http://n8n_service/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Prefix /n8n;
            proxy_redirect default;

            # permitir que sub_filter modifique HTML (desactivar compresión del backend)
            proxy_set_header Accept-Encoding "";

            # reescrituras en el HTML para prefijar rutas absolutas con /n8n/
            sub_filter 'href="/' 'href="/n8n/';
            sub_filter 'src="/' 'src="/n8n/';
            sub_filter 'content="/' 'content="/n8n/';
            sub_filter 'url("/' 'url("/n8n/';
            sub_filter_once off;
            sub_filter_types text/html;

            # reescribir cookies del backend para usar el prefijo
            proxy_cookie_path / /n8n/;

            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_http_version 1.1;

            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;

            # aumentar timeouts para evitar 502 en operaciones largas
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # MinIO Console (opcional)
        location /minio-console/ {
            proxy_pass http://minio_service/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }

    # Servidor HTTPS (puerto 443)
    server {
        listen 443 ssl;
        server_name localhost;

        # Certificados SSL autofirmados para desarrollo local
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Redirigir / a /inicio  (usar $http_host para mantener puerto)
        location = / {
            return 301 $scheme://$http_host/inicio;
        }

        # URLs limpias para páginas HTML - proxy al frontend
        location = /inicio {
            proxy_pass http://frontend/iniciar2-0.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /usuarios {
            proxy_pass http://frontend/usuarios.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /publicaciones {
            proxy_pass http://frontend/publicaciones.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /chatbot {
            proxy_pass http://frontend/chatbot.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /login {
            proxy_pass http://frontend/login.html;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Archivos estáticos - proxy al frontend
        location /css/ {
            proxy_pass http://frontend/css/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /js/ {
            proxy_pass http://frontend/js/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # API Backend
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # n8n
        location /n8n/ {
            # enviar al upstream sin usar variables en proxy_pass
            proxy_pass http://n8n_service/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-Prefix /n8n;
            proxy_redirect default;

            # permitir que sub_filter modifique HTML (desactivar compresión del backend)
            proxy_set_header Accept-Encoding "";

            # reescrituras en el HTML para prefijar rutas absolutas con /n8n/
            sub_filter 'href="/' 'href="/n8n/';
            sub_filter 'src="/' 'src="/n8n/';
            sub_filter 'content="/' 'content="/n8n/';
            sub_filter 'url("/' 'url("/n8n/';
            sub_filter_once off;
            sub_filter_types text/html;

            # reescribir cookies del backend para usar el prefijo
            proxy_cookie_path / /n8n/;

            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_http_version 1.1;

            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;

            # aumentar timeouts para evitar 502 en operaciones largas
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            proxy_read_timeout 300;
        }

        # MinIO Console
        location /minio-console/ {
            proxy_pass http://minio_service/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
    }
}