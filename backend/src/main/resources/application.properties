# Server
server.port=8080
server.servlet.context-path=/

# Application
spring.application.name=backend

# PostgreSQL (leer desde variables de entorno entregadas por docker-compose / .env)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres:5432/${POSTGRES_DATABASE:usuarios}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:${POSTGRES_USER:admin}}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:${POSTGRES_PASSWORD:admin123}}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# MongoDB (leer desde variables de entorno)
spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST:${MONGO_HOST:mongo}}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT:${MONGO_PORT:27017}}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE:${MONGO_DATABASE:publicaciones_db}}
spring.data.mongodb.username=${SPRING_DATA_MONGODB_USERNAME:${MONGO_USERNAME:admin}}
spring.data.mongodb.password=${SPRING_DATA_MONGODB_PASSWORD:${MONGO_PASSWORD:admin123}}
spring.data.mongodb.authentication-database=${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE:${MONGO_INITDB_DATABASE:admin}}

# MinIO (leer desde variables de entorno)
minio.endpoint=${MINIO_ENDPOINT:http://minio:9000}
minio.access-key=${MINIO_ACCESS_KEY:minioadmin}
minio.secret-key=${MINIO_SECRET_KEY:minioadmin}
minio.bucket-name=${MINIO_BUCKET_NAME:imagenes}

# n8n webhook (opcionalmente configurable desde env)
n8n.webhook-url=${N8N_WEBHOOK_URL:http://n8n:5678/webhook}

# CORS
cors.allowed-origins=*
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always